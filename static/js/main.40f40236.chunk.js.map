{"version":3,"sources":["robot-gallery/components/HOC/AddToCart.tsx","robot-gallery/assets/images/logo.svg","AppState.tsx","robot-gallery/components/Robot.tsx","robot-gallery/components/RobotDiscount.tsx","robot-gallery/components/ShoppingCart.tsx","robot-gallery/App.tsx","reportWebVitals.js","index.tsx","robot-gallery/App.module.css","robot-gallery/components/Robot.module.css","robot-gallery/components/ShoppingCart.module.css"],"names":["ChildComponent","myLove","username","shoppingCart","items","myContext","createContext","mySetStateContext","React","undefined","AppStateProvider","props","useState","state","setState","Provider","value","children","withAddToCart","id","name","email","addToCart","useContext","className","styles","cardContainer","alt","src","onClick","RobotDiscount","useAddToCart","ShoppingCart","open","setOpen","button","e","length","cartDropDown","map","item","App","robotGallery","setRobotGallery","loading","setLoading","error","setError","fetchData","a","fetch","res","json","data","message","useEffect","app","appHeader","logo","appLogo","robotList","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","AppState","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.40f40236.chunk.js","sourcesContent":["import React,{useContext} from 'react';\r\nimport {myContext,mySetStateContext} from '../../../AppState';\r\nimport {RobotProps} from '../Robot';\r\n\r\nexport const withAddToCart = (ChildComponent:React.ComponentType<RobotProps>) => {\r\n    return (props)=>{\r\n        const setState = useContext(mySetStateContext);\r\n        const addToCart = (id,name) => {\r\n            if(setState){\r\n                setState(state =>{\r\n                    return {\r\n                        ...state,\r\n                        shoppingCart:{\r\n                            items:[...state.shoppingCart.items,{id,name}]\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return <ChildComponent {...props} addToCart={addToCart}/>\r\n    }\r\n}\r\n\r\nexport const useAddToCart = ()=>{\r\n    const setState = useContext(mySetStateContext);\r\n    const addToCart = (id,name) => {\r\n        if(setState){\r\n            setState(state =>{\r\n                return {\r\n                    ...state,\r\n                    shoppingCart:{\r\n                        items:[...state.shoppingCart.items,{id,name}]\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return addToCart;\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,createContext} from 'react';\r\n\r\ninterface AppStateValue {\r\n    username:string;\r\n    shoppingCart:{items:{id:number,name:string}[]}\r\n}\r\n\r\nconst myLove:AppStateValue = {\r\n    username:\"米米\",\r\n    shoppingCart:{items:[]}\r\n};\r\n\r\nexport const myContext = createContext(myLove);\r\nexport const mySetStateContext = React.createContext<React.Dispatch<React.SetStateAction<AppStateValue>> | undefined>(undefined);\r\n\r\nconst AppStateProvider:React.FC = (props) => {\r\n    const [state,setState] = useState(myLove);\r\n    return (\r\n    <myContext.Provider value={state}>\r\n        <mySetStateContext.Provider value={setState}>\r\n            {props.children}\r\n        </mySetStateContext.Provider>\r\n    </myContext.Provider>)\r\n}\r\n\r\nexport default AppStateProvider;","import React,{useContext} from 'react';\r\nimport styles from './Robot.module.css';\r\nimport {myContext,mySetStateContext} from '../../AppState';\r\nimport {withAddToCart} from './HOC/AddToCart'\r\nexport interface RobotProps {\r\n    id:number;\r\n    name:string;\r\n    email:string;\r\n    addToCart:(id,name) => void;\r\n}\r\n\r\nconst Robot:React.FC<RobotProps> = ({id,name,email,addToCart}) =>{\r\n    const value = useContext(myContext);\r\n    return(\r\n            <div className={styles.cardContainer}>\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}`}/>\r\n                {/* 照片從robohash.org取得 */}\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            <p>作者：{value.username}</p>\r\n            <button onClick={()=>addToCart(id,name)}>加入購物車</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAddToCart(Robot);","import React,{useContext} from 'react';\r\nimport styles from './Robot.module.css';\r\nimport {myContext,mySetStateContext} from '../../AppState';\r\nimport {useAddToCart} from './HOC/AddToCart'\r\n\r\ninterface RobotProps {\r\n    id:number;\r\n    name:string;\r\n    email:string;\r\n}\r\n\r\nconst RobotDiscount:React.FC<RobotProps> = ({id,name,email}) =>{\r\n    const value = useContext(myContext);\r\n    const addToCart = useAddToCart();\r\n    return(\r\n            <div className={styles.cardContainer}>\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}`}/>\r\n                {/* 照片從robohash.org取得 */}\r\n            <h2>打折商品</h2>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            <p>作者：{value.username}</p>\r\n            <button onClick={()=>addToCart(id,name)}>加入購物車</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RobotDiscount;","import React,{useState,useContext} from 'react';\r\nimport styles from './ShoppingCart.module.css';\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport {myContext} from '../../AppState';\r\ninterface Props {//傳入狀態\r\n\r\n}\r\n\r\ninterface State {//組件狀態\r\n    isOpen:boolean\r\n}\r\n\r\nconst ShoppingCart:React.FC = (props) => {\r\n    const value = useContext(myContext);\r\n    const [open,setOpen] = useState(false);\r\n    const handleShowList = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{//將下面onClick的event資料型態寫進這裡的e後面\r\n        setOpen(open?false:true);\r\n    }\r\n    return(\r\n        <div className={styles.cardContainer}>\r\n            <button className={styles.button} \r\n            onClick={handleShowList}\r\n            >\r\n                <FiShoppingCart/>\r\n                <span>購物車 {value.shoppingCart.items.length}（件）</span></button>\r\n            {open?<div className={styles.cartDropDown}>\r\n                <ul>\r\n                    {value.shoppingCart.items.map(item=>\r\n                        <li>{item.name}</li>\r\n                    )}\r\n                </ul>\r\n            </div>:''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart;","import React,{useState,useEffect} from 'react';//沒有這行會錯\r\nimport logo from './assets/images/logo.svg';\r\nimport styles from './App.module.css';\r\nimport robots from './mockdata/robots.json';\r\nimport Robot from './components/Robot';\r\nimport RobotDiscount from './components/RobotDiscount';\r\nimport ShoppingCart from './components/ShoppingCart';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n  robotGallery: any[]\r\n}\r\n\r\n//loading狀態添加\r\nconst App:React.FC<Props> = (props) =>{\r\n  const [count,setCount] = useState<number>(0);\r\n  const [robotGallery,setRobotGallery] = useState<any>([]);\r\n  const [loading,setLoading]= useState<boolean>(false);\r\n  const [error,setError] = useState<string>('');\r\n  const fetchData = async()=>{\r\n    setLoading(true);//loading畫面出現\r\n    try{\r\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n      const data = await res.json();\r\n      setRobotGallery(data);\r\n    }catch(e){\r\n      setError(e.message);\r\n    }\r\n    setLoading(false);//loading畫面結束\r\n  }\r\n  useEffect(()=>{\r\n    fetchData();\r\n  },[]);\r\n  return (\r\n    <div className={styles.app}>\r\n      <div className={styles.appHeader}>\r\n        <img src={logo} className={styles.appLogo} alt=\"logo\" />\r\n        <h1>\r\n          Oliver機器人精品專賣店\r\n        </h1>\r\n      </div>\r\n      <ShoppingCart/>\r\n      {!error||error!==\"\" && <div>{error}</div>}\r\n      {\r\n        loading?<h2>loading...</h2>:\r\n        <div className={styles.robotList}>\r\n          {robotGallery.map((item,index) => \r\n            index % 2 ===0 ? (\r\n            <RobotDiscount key={item.id} id={item.id} name={item.name} email={item.email}/>\r\n          ):(\r\n            <Robot key={item.id} id={item.id} name={item.name} email={item.email}/>\r\n          )\r\n          )}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React,{createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './robot-gallery/App';\nimport reportWebVitals from './reportWebVitals';\nimport AppStateProvider,{myContext} from './AppState';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppStateProvider>\n      <App/>\n    </AppStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1svAO\",\"appHeader\":\"App_appHeader__WiOcA\",\"appLogo\":\"App_appLogo__11Fis\",\"App-logo-spin\":\"App_App-logo-spin__1As8w\",\"robotList\":\"App_robotList__3W8-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Robot_cardContainer__1fTG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartContainer\":\"ShoppingCart_cartContainer__3uYfd\",\"cartDropDown\":\"ShoppingCart_cartDropDown__2xWel\",\"button\":\"ShoppingCart_button__8drN8\"};"],"sourceRoot":""}